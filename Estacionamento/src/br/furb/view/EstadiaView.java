/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.furb.view;

import br.furb.pojo.Estadia;
import br.furb.pojo.Pessoa;
import br.furb.pojo.Veiculo;
import br.furb.controller.Controller;
import br.furb.controller.EstadiaController;
import br.furb.factory.ParkFactory;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Gabriel Bernardi
 */
public class EstadiaView extends javax.swing.JDialog implements View{
    
    private Pessoa pessoa = null;
    private Veiculo veiculo = null;
    
    /**
     * Creates new form EstadiaView
     */
    public EstadiaView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public EstadiaView(Object form) {
        super((JFrame) form, true);
        initComponents();
        setLocationRelativeTo(null);
        DefaultTableModel dtm = new DefaultTableModel(new String[]{"Nome", "Veículo", "Placa", "D. Entrada"
                                                                   , "D. Saída", "Preço (R$)"}, 0);
        estadiasJTable.setModel(dtm);
        cpfJFormattedTextField.setEnabled(false);
        nomePessoaJTextField.setEnabled(false);
        nomeVeiculoJTextField.setEnabled(false);
        placaJFormattedTextField.setEnabled(false);
        dataEntradaJFormattedTextField.setEnabled(false);
        this.atualizaTabela();
        estadiasJTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting())
                    return;
                int selected = estadiasJTable.getSelectedRow();
                pessoa = (Pessoa) estadiasJTable.getValueAt(selected, 0);
                cpfJFormattedTextField.setText(pessoa.getCpf());
                nomePessoaJTextField.setText(pessoa.getNome());
                veiculo = (Veiculo) estadiasJTable.getValueAt(selected, 1);
                nomeVeiculoJTextField.setText(veiculo.getNome());
                placaJFormattedTextField.setText(veiculo.getPlaca());
                dataEntradaJFormattedTextField.setText((String) estadiasJTable.getValueAt(selected, 3));
                dataSaidaJFormattedTextField.setText((String) estadiasJTable.getValueAt(selected, 4)); 
                dataSaidaJFormattedTextField.setEnabled("  /  /       :  ".equals(dataSaidaJFormattedTextField.getText()));
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_add_pessoa = new javax.swing.JPanel();
        cpfJFormattedTextField = new javax.swing.JFormattedTextField();
        nomePessoaJTextField = new javax.swing.JTextField();
        lblPessoaNome = new javax.swing.JLabel();
        cpfJLabel = new javax.swing.JLabel();
        btnCarregarPessoa = new javax.swing.JButton();
        panel_add_veiculo = new javax.swing.JPanel();
        placaJFormattedTextField = new javax.swing.JFormattedTextField();
        placaJLabel = new javax.swing.JLabel();
        lblVeiculoNome = new javax.swing.JLabel();
        nomeVeiculoJTextField = new javax.swing.JTextField();
        btnCarregarVeiculo = new javax.swing.JButton();
        panel_add_data_hora = new javax.swing.JPanel();
        dataSaidaJFormattedTextField = new javax.swing.JFormattedTextField();
        lblEntrada = new javax.swing.JLabel();
        lblSaida = new javax.swing.JLabel();
        dataEntradaJFormattedTextField = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        estadiasJTable = new javax.swing.JTable();
        salvarJButton = new javax.swing.JButton();
        excluirJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de Estadia");

        panel_add_pessoa.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pessoa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 13))); // NOI18N

        try {
            cpfJFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cpfJFormattedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfJFormattedTextFieldActionPerformed(evt);
            }
        });

        lblPessoaNome.setText("Nome:");

        cpfJLabel.setText("CPF:");

        btnCarregarPessoa.setText("Carregar");
        btnCarregarPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarPessoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_add_pessoaLayout = new javax.swing.GroupLayout(panel_add_pessoa);
        panel_add_pessoa.setLayout(panel_add_pessoaLayout);
        panel_add_pessoaLayout.setHorizontalGroup(
            panel_add_pessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_add_pessoaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_add_pessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panel_add_pessoaLayout.createSequentialGroup()
                        .addComponent(lblPessoaNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomePessoaJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_add_pessoaLayout.createSequentialGroup()
                        .addComponent(cpfJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cpfJFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCarregarPessoa)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_add_pessoaLayout.setVerticalGroup(
            panel_add_pessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_add_pessoaLayout.createSequentialGroup()
                .addGroup(panel_add_pessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPessoaNome)
                    .addComponent(nomePessoaJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_add_pessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpfJFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpfJLabel)
                    .addComponent(btnCarregarPessoa))
                .addContainerGap())
        );

        panel_add_veiculo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Veículo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 13))); // NOI18N

        try {
            placaJFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("???-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        placaJLabel.setText("Placa:");

        lblVeiculoNome.setText("Nome:");

        btnCarregarVeiculo.setText("Carregar");
        btnCarregarVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarVeiculoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_add_veiculoLayout = new javax.swing.GroupLayout(panel_add_veiculo);
        panel_add_veiculo.setLayout(panel_add_veiculoLayout);
        panel_add_veiculoLayout.setHorizontalGroup(
            panel_add_veiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_add_veiculoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_add_veiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(placaJLabel)
                    .addComponent(lblVeiculoNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_add_veiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nomeVeiculoJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                    .addComponent(placaJFormattedTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCarregarVeiculo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_add_veiculoLayout.setVerticalGroup(
            panel_add_veiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_add_veiculoLayout.createSequentialGroup()
                .addGroup(panel_add_veiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVeiculoNome)
                    .addComponent(nomeVeiculoJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(panel_add_veiculoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(placaJLabel)
                    .addComponent(placaJFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCarregarVeiculo)))
        );

        panel_add_data_hora.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data e Hora", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 13))); // NOI18N

        try {
            dataSaidaJFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/#### ##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblEntrada.setText("Entrada:");

        lblSaida.setText("Saida:");

        try {
            dataEntradaJFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/#### ##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout panel_add_data_horaLayout = new javax.swing.GroupLayout(panel_add_data_hora);
        panel_add_data_hora.setLayout(panel_add_data_horaLayout);
        panel_add_data_horaLayout.setHorizontalGroup(
            panel_add_data_horaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_add_data_horaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_add_data_horaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEntrada)
                    .addComponent(lblSaida))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_add_data_horaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dataSaidaJFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataEntradaJFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_add_data_horaLayout.setVerticalGroup(
            panel_add_data_horaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_add_data_horaLayout.createSequentialGroup()
                .addGroup(panel_add_data_horaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEntrada)
                    .addComponent(dataEntradaJFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(panel_add_data_horaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataSaidaJFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSaida)))
        );

        estadiasJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(estadiasJTable);

        salvarJButton.setText("Salvar");
        salvarJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarJButtonActionPerformed(evt);
            }
        });

        excluirJButton.setText("Excluir");
        excluirJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_add_pessoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_add_veiculo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_add_data_hora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(excluirJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(salvarJButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_add_pessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_add_veiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_add_data_hora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salvarJButton)
                    .addComponent(excluirJButton))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cpfJFormattedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfJFormattedTextFieldActionPerformed

    }//GEN-LAST:event_cpfJFormattedTextFieldActionPerformed

    private void btnCarregarPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarPessoaActionPerformed
        View pessoaView = ParkFactory.getFactory("Pessoa").createView(this.getParent());
        pessoa = (Pessoa) pessoaView.abreJanelaSelecao();
        if (pessoa != null) {
            cpfJFormattedTextField.setText(pessoa.getCpf());
            nomePessoaJTextField.setText(pessoa.getNome());
        }
    }//GEN-LAST:event_btnCarregarPessoaActionPerformed

    private void btnCarregarVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarVeiculoActionPerformed
        View veiculoView = ParkFactory.getFactory("Veiculo").createView(this.getParent());
        veiculo = (Veiculo) veiculoView.abreJanelaSelecao();
        if (veiculo != null) {
            placaJFormattedTextField.setText(veiculo.getPlaca());
            nomeVeiculoJTextField.setText(veiculo.getNome());
        }
    }//GEN-LAST:event_btnCarregarVeiculoActionPerformed

    private void salvarJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarJButtonActionPerformed
        try {
            if (!"  /  /       :  ".equals(dataEntradaJFormattedTextField.getText()) &&
                    !"  /  /       :  ".equals(dataSaidaJFormattedTextField.getText())) {                
                Estadia estadia = (Estadia) this.recuperar(Estadia.formatarChave(pessoa.getCpf(), 
                        veiculo.getPlaca(), dataEntradaJFormattedTextField.getText()));
                estadia.setDataSaida(DateFormat.getInstance().parse(dataSaidaJFormattedTextField.getText()));
                if (JOptionPane.showConfirmDialog(this, "Tem certeza que deseja finalizar a estadia?", 
                        "Confirmação", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    this.salvar(estadia);
                    this.atualizaTabela();
                }
            } else {
                if (this.existeVeiculo(veiculo)) {
                    JOptionPane.showMessageDialog(this, "O veículo selecionado já está no estacionamento!");
                    return;
                }
                Estadia estadia = new Estadia();
                estadia.setPessoa(pessoa);
                estadia.setVeiculo(veiculo);
                estadia.setDataEntrada(new Date());
                if (this.recuperar(estadia.getChave()) != null){
                    String message = "Já exite uma Estadia cadastrada, deseja substituir?";
                    String title = "Confirmação";
                    int reply = JOptionPane.showConfirmDialog(this, message, title, JOptionPane.YES_NO_OPTION);
                    if (reply == JOptionPane.YES_OPTION){
                        this.salvar(estadia);
                        this.atualizaTabela();
                    }
                } else {
                    this.salvar(estadia);
                    this.atualizaTabela();
                }
            }
            this.cpfJFormattedTextField.setText("");
            this.nomePessoaJTextField.setText("");
            this.placaJFormattedTextField.setText("");
            this.nomeVeiculoJTextField.setText("");
            this.dataEntradaJFormattedTextField.setText("");
            this.dataSaidaJFormattedTextField.setText("");
            this.dataSaidaJFormattedTextField.setEnabled(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Não foi possível registrar a estadia!\n" + e.getMessage());
        }
    }//GEN-LAST:event_salvarJButtonActionPerformed

    private void excluirJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirJButtonActionPerformed
        if (pessoa != null && veiculo != null && !"  /  /       :  ".equals(dataEntradaJFormattedTextField.getText())) 
            try {
                if (JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro de estadia?", 
                        "Confirmação", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    this.excluir(Estadia.formatarChave(pessoa.getCpf(), veiculo.getPlaca(), dataEntradaJFormattedTextField.getText()));
                    this.cpfJFormattedTextField.setText("");
                    this.nomePessoaJTextField.setText("");
                    this.placaJFormattedTextField.setText("");
                    this.nomeVeiculoJTextField.setText("");
                    this.dataEntradaJFormattedTextField.setText("");
                    this.dataSaidaJFormattedTextField.setText("");
                    this.dataSaidaJFormattedTextField.setEnabled(true);
                    this.atualizaTabela();
                }
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Erro ao excluir registro de estadia!\n" + ex.getMessage());
            }
    }//GEN-LAST:event_excluirJButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EstadiaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EstadiaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EstadiaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EstadiaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EstadiaView dialog = new EstadiaView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public boolean existeVeiculo(Veiculo veiculo) throws Exception {
        return ((EstadiaController) ParkFactory.getFactory("Estadia").createController()).existeVeiculo(veiculo);
    }

    @Override
    public void salvar(Object info) {
        Controller estadiaController = ParkFactory.getFactory("Estadia").createController();
        try {
            estadiaController.salvar(info);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar veículo!\n" + ex.getMessage());
        }
    }

    @Override
    public Object recuperar(String chave) {
        Controller estadiaController = ParkFactory.getFactory("Estadia").createController();
        try {
            return estadiaController.recuperar(chave);
        } catch (Exception ex) {
            return null;
        }
    }

    @Override
    public List recuperar() {
        Controller estadiaController = ParkFactory.getFactory("Estadia").createController();
        try {
            return estadiaController.recuperar();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao recuperar registros!\n" + ex.getMessage());
        }
        return null;
    }

    @Override
    public void excluir(String chave){
        Controller estadiaController = ParkFactory.getFactory("Estadia").createController();
        try {
            estadiaController.excluir(chave);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao excluir registro de estadia!\n" + ex.getMessage());
        }
    }
    
    @Override
    public void abreJanela() {
        this.setVisible(true);
    }

    @Override
    public Object abreJanelaSelecao() {
        this.abreJanela();
        return null;
    }
    
    @Override
    public void atualizaTabela() {
        estadiasJTable.getSelectionModel().setValueIsAdjusting(true);
        DefaultTableModel dtm = (DefaultTableModel) estadiasJTable.getModel();
        dtm.setRowCount(0);
        LinkedList<Estadia> estadias = (LinkedList) this.recuperar();
        estadias.sort(null);
        for (Estadia estadia : estadias) {
            SimpleDateFormat sdfEntrada = new SimpleDateFormat("dd/MM/yyyy HH:mm");
            SimpleDateFormat sdfSaida = new SimpleDateFormat("dd/MM/yyyy HH:mm");
            dtm.addRow(new Object[]{estadia.getPessoa(), estadia.getVeiculo(),
                                    estadia.getVeiculo().getPlaca(), 
                                    sdfEntrada.format(estadia.getDataEntrada()), 
                                    estadia.getDataSaida() == null ? "" : sdfSaida.format(estadia.getDataSaida()), 
                                    estadia.calcularValor().toString()});
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCarregarPessoa;
    private javax.swing.JButton btnCarregarVeiculo;
    private javax.swing.JFormattedTextField cpfJFormattedTextField;
    private javax.swing.JLabel cpfJLabel;
    private javax.swing.JFormattedTextField dataEntradaJFormattedTextField;
    private javax.swing.JFormattedTextField dataSaidaJFormattedTextField;
    private javax.swing.JTable estadiasJTable;
    private javax.swing.JButton excluirJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEntrada;
    private javax.swing.JLabel lblPessoaNome;
    private javax.swing.JLabel lblSaida;
    private javax.swing.JLabel lblVeiculoNome;
    private javax.swing.JTextField nomePessoaJTextField;
    private javax.swing.JTextField nomeVeiculoJTextField;
    private javax.swing.JPanel panel_add_data_hora;
    private javax.swing.JPanel panel_add_pessoa;
    private javax.swing.JPanel panel_add_veiculo;
    private javax.swing.JFormattedTextField placaJFormattedTextField;
    private javax.swing.JLabel placaJLabel;
    private javax.swing.JButton salvarJButton;
    // End of variables declaration//GEN-END:variables
}
